<UserControl x:Class="BingHomeDesktopBackground.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:BingHomeDesktopBackground"
        xmlns:viewmodels="clr-namespace:BingHomeDesktopBackground.ViewModels"
        mc:Ignorable="d"
        >
    <UserControl.Resources>
        <Style x:Key="CheckboxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border Background="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <Image x:Name="LogoCheck" Source="/Icons/plus-8x.png" Width="20" Height="20" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="LogoCheck" Property="Source" Value="/Icons/check-8x.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StandardFlatBtn" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}">
                            <ContentPresenter TextElement.Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FolderBtn" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="White" CornerRadius="4" Width="30" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter TextElement.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#FF6475C5" />
                    <Setter Property="BorderBrush" Value="#FF6475C5" />
                    <Setter Property="BorderThickness" Value="1.5" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Foreground" Value="#FFF1CD51" />
                    <Setter Property="BorderBrush" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FlatBtn" TargetType="{x:Type Button}" BasedOn="{StaticResource StandardFlatBtn}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#FFB0B0B0" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsEnabled" Value="True" />
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#FF1F2D66" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsEnabled" Value="True" />
                        <Condition Property="IsMouseOver" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#FF9BAAEA" />
                </MultiTrigger>
                <DataTrigger Binding="{Binding Path=SelectedImages.Count}" Value="0">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=DestinationPath}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>


    </UserControl.Resources>
    <Grid ScrollViewer.HorizontalScrollBarVisibility="Disabled">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"></ColumnDefinition>
            <ColumnDefinition Width="250"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <ListBox x:Name="ImagesListBox" SelectionMode="Multiple" BorderThickness="0" Margin="20,0,20,0" HorizontalAlignment="Center" ItemsSource="{Binding ImagesView, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" Grid.Row="0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding ListBoxSelectionChangedCommand}" CommandParameter="{Binding ElementName=ImagesListBox}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border Margin="5" Background="White">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Border>
                                <StackPanel Margin="10,20,5,10" Orientation="Horizontal">
                                    <TextBlock  Margin="0,0,20,0" FontFamily="{StaticResource FontAwesome}" VerticalAlignment="Center" FontSize="32" FontWeight="Bold" Foreground="#FF86ACD8">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Name}" Value="Desktop">
                                                        <Setter Property="Text" Value="" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Name}" Value="Phone">
                                                        <Setter Property="Text" Value="" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock FontSize="32" FontWeight="Bold" Foreground="#FF86ACD8" Text="{Binding Name}" />
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListBox.GroupStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Cursor="Hand" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="ContainerGrid">
                        <Border Background="White" x:Name="mask" CornerRadius="8" />
                        <Grid>
                            <Grid.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=mask}" />
                            </Grid.OpacityMask>
                            <Image x:Name="ImageElement" MaxHeight="200" Source="{Binding Path=CurrentImage.UriSource}">
                            </Image>
                            <Border Margin="0" ClipToBounds="True">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                                                <Setter Property="BorderBrush" Value="#FF697CAE" />
                                                <Setter Property="BorderThickness" Value="10" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                            <Border x:Name="CheckBoxBorder" Height="60" Width="60" HorizontalAlignment="Right" CornerRadius="5,0,0,0" VerticalAlignment="Bottom">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                                                <Setter Property="Background" Value="#FF697CAE" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="False">
                                                <Setter Property="Background" Value="#CC6C6A6A" />
                                                <Setter Property="Opacity" Value="0.9" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <CheckBox x:Name="CheckBoxSelect" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem, Mode=FindAncestor}, Path=IsSelected}">
                                    <CheckBox.Style>
                                        <Style BasedOn="{StaticResource CheckboxStyle}" TargetType="{x:Type CheckBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=ImageElement, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="IsChecked" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                            </Border>
                            <Button Cursor="Hand" x:Name="zoomBtn" Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.OpenPopupCommand}" CommandParameter="{Binding}"  Foreground="White" FontSize="16" Width="60" Height="60" HorizontalAlignment="Left" VerticalAlignment="Top" BorderThickness="0" Content="" FontFamily="{StaticResource FontAwesome}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border CornerRadius="0,0,5,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#FF697CAE" />
                                                <Setter Property="Opacity" Value="1" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="False">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="Opacity" Value="0.7" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding ElementName=ContainerGrid, Path=IsMouseOver}" Value="False">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=ContainerGrid, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=ActualWidth}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                    </WrapPanel>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>
        <ScrollViewer Margin="10,0,0,0" Grid.Column="1" Grid.Row="0">
            <StackPanel Margin="0,20,0,0">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="FontSize" Value="18" />
                        <Setter Property="Foreground" Value="#FF6A8CBD" />
                    </Style>
                </StackPanel.Resources>
                <TextBlock FontSize="18" Margin="0,0,0,10">
                <Run FontFamily="{StaticResource FontAwesome}" Text="" ></Run>
                <Run Text=" Selected Pictures : " />
                <Run Text="{Binding Path=SelectedImages.Count, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                </TextBlock>
                <ScrollViewer HorizontalAlignment="Left" Margin="10,10,0,30" MaxHeight="500" VerticalScrollBarVisibility="Auto">
                    <ItemsControl ItemsSource="{Binding SelectedImages}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Width="160" Margin="0,0,0,10">
                                    <Grid>
                                        <Image Opacity="0.8" Margin="0,0,0,0"  Source="{Binding CurrentImage.UriSource}">
                                            <Image.Style>
                                                <Style TargetType="{x:Type Image}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext.Type}" Value="Phone">
                                                            <Setter Property="Width" Value="50" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <ToggleButton x:Name="EditToggleBtn" FontSize="24" Foreground="White" FontFamily="{StaticResource FontAwesome}" BorderThickness="0">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Border 
                                                                Background="{TemplateBinding Background}"
                                                                BorderThickness="{TemplateBinding BorderThickness}">
                                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Content" Value="" />
                                                            <Setter Property="Background" Value="#44356DCF" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="False">
                                                            <Setter Property="Background" Value="Transparent" />
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Background" Value="#44356DCF" />
                                                            <Setter Property="Content" Value="" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                    </Grid>
                                    <TextBox Padding="5" BorderBrush="Gray" BorderThickness="0.5"  TextWrapping="Wrap" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=EditToggleBtn, Path=IsChecked}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=EditToggleBtn, Path=IsChecked}" Value="False">
                                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
                <StackPanel Orientation="Horizontal">
                    <TextBlock FontWeight="Bold" Margin="0,0,10,0"  Text="Destination " />
                    <Button Style="{StaticResource FolderBtn}" Command="{Binding SelectDestinationPathCommand}" Content="" FontFamily="{StaticResource FontAwesome}">
                       
                    </Button>
                </StackPanel>
                <TextBlock FontSize="16" Margin="0,10,0,5">
                <Run Text="" FontFamily="{StaticResource FontAwesome}"></Run>
                <Run Text=" " />
                <Run Text="{Binding ShortDestinationPathName}"/>
                </TextBlock>
                <TextBlock Text="{Binding DestinationPath}" FontSize="14" FontStyle="Italic" Margin="0,0,0,20" />
                <Button Style="{StaticResource FlatBtn}" Cursor="Hand" Command="{Binding CopySelectedFilesCommand}" CommandParameter="{Binding ElementName=ImagesListBox}" Height="30" Margin="0,0,50,0"  Content="Copier les images">
                    
                </Button>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
